{"version":3,"sources":["App.js","Login.js","TheButton.js","MainPage.js","serviceWorker.js","index.js"],"names":["App","props","setToken","idToken","localStorage","setItem","getToken","getItem","getConfirm","jwtDecode","console","log","textInput","React","createRef","passInput","emailInput","state","loading","this","history","push","name","current","value","email","password","setState","setTimeout","bind","fetch","method","headers","body","JSON","stringify","then","response","status","alert","json","data","token","className","theme","createTheme","s","m","l","offset","animate","show","anim","Fragment","style","padding","onClick","goToSignup","goToLogin","class","paddingTop","Form","Group","controlId","Label","Control","ref","type","Text","variant","signup","color","height","width","timeout","Component","withRouter","Login","undefined","login","TheButton","lon","lat","latitude","toString","longitude","text","isGeolocationAvailable","isGeolocationEnabled","coords","postLocation","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","MainPage","cursor","Boolean","window","location","hostname","match","ReactDOM","render","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50b4b372.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { ThemeProvider, createTheme, Row, Arwes, Col, Button } from \"arwes\";\nimport { Form } from 'react-bootstrap';\nimport * as jwtDecode from 'jwt-decode';\nimport { createBrowserHistory } from 'history'\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\n\nimport Loader from 'react-loader-spinner'\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef(); \n    this.passInput = React.createRef(); \n    this.emailInput = React.createRef(); \n    this.state = {loading: false};\n  }\n\n  componentDidMount(){\n    let auth = localStorage.getItem(\"token\");\n     if(auth){\n       this.props.history.push('/TheButton');\n       }\n   }\n\nsignup() {\n\n  let name = this.textInput.current.value;\n  let email = this.emailInput.current.value;\n  let password = this.passInput.current.value;\n  let props = this.props;\n\n  this.setState({ loading: true })\n  setTimeout(\n  function() {\n      this.setState({loading: false});\n  }\n  .bind(this),\n  1000\n  );\n\n\n  fetch('http://localhost:8080/api/users', {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(\n     { name:name, email:email, password:password,\n    })\n  }).then(function(response) {\n    setTimeout(\n      function() {\n        if(response.status !== 200){\n         alert('Sorry, an error occured, try again later');\n         }\n      }\n      .bind(this),\n      1500\n  );\n    return response.json();\n  }).then(function(data) {\n    localStorage.setItem(\"token\", data.token);  \n    localStorage.setItem(\"name\", name);\n    props.history.push('/Login/');\n  });\n}\n\n  goToLogin(){\n     this.props.history.push('/Login');\n  }\n\n   goToSignup(){\n    this.props.history.push('/Signup');\n  }\n\n  setToken = idToken => {\n    localStorage.setItem(\"token\", idToken);\n  };\n\n  getToken = () => {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"token\");\n  };\n\n  getConfirm = () => {\n    // Using jwt-decode npm package to decode the token\n    if(this.getToken() !== 'undefined') {\n    let answer = jwtDecode(this.getToken());\n    return answer;\n    }\n    else{\n      console.log('no token found')\n    }\n  };\n\n  render() {\n     return (\n      <div className=\"App\">\n        <ThemeProvider theme={createTheme()}>\n          <Row>\n\n            <Col s={6} m={8} l={6} offset={[\"m2\", \"l3\"]}>\n              <Arwes animate show>\n                {anim => (\n                    <React.Fragment>\n                       {this.state.loading === false ? (\n                      <div style={{ padding: 20 }}>\n                        <h1>Citizen</h1>\n                        <p>You are not in danger</p>\n                        <p><Button onClick={() => this.goToSignup()}>Signup</Button> or <Button onClick={() => this.goToLogin()}>Login</Button></p> \n                       \n                      <div class=\"container\" style={{ paddingTop: 60 }}>\n                          <div class=\"row\">\n                          <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                          </div>\n                            <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                               <Form>\n                                <Form.Group controlId=\"formBasicUser\">\n                                  <Form.Label>Username</Form.Label>\n                                  <Form.Control ref={this.textInput} type=\"text\" type=\"text\" placeholder=\"Enter user\" />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicEmail\" style={{ paddingTop: 20 }}>\n                                  <Form.Label>Email</Form.Label>\n                                  <Form.Control ref={this.emailInput} type=\"text\" type=\"text\" placeholder=\"Enter email\" />\n                                </Form.Group>\n                                <Form.Text>\n                                  We'll never share your email with anyone else.\n                                </Form.Text>\n\n                                <Form.Group controlId=\"formBasicPassword\" style={{ paddingTop: 20 }}>\n                                  <Form.Label>Password</Form.Label>\n                                  <Form.Control ref={this.passInput} type=\"text\" type=\"password\" placeholder=\"Password\" />\n                                </Form.Group>\n                               \n                              </Form>\n                              <Button variant=\"primary\" type=\"submit\" onClick={() => this.signup()}>\n                                  Submit\n                                </Button>\n                              \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                       ):\n                       <div class=\"container\" style={{ paddingTop: 190 }}>\n                       <div class=\"row\">\n                       <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                       </div>\n                         <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                         <Loader\n                           type=\"Puff\"\n                           color=\"#00BFFF\"\n                           height={100}\n                           width={100}\n                           timeout={3000} //3 secs\n                         />\n                      </div>\n                    </div>\n                  </div>\n                       }\n                  </React.Fragment>\n                )}\n              </Arwes>\n            </Col>\n            \n          </Row>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\nexport default withRouter(App)\n","import React from \"react\";\nimport \"./App.css\";\nimport { ThemeProvider, createTheme, Row, Arwes, Col, Button } from \"arwes\";\nimport { Form } from 'react-bootstrap';\nimport * as jwtDecode from 'jwt-decode';\n\nimport Loader from 'react-loader-spinner';\n\nexport default class Login extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef(); \n    this.passInput = React.createRef(); \n    this.state = {loading: false};\n  }\n\n  componentDidMount(){\n    let auth = localStorage.getItem(\"token\");\n     if(auth){\n       this.props.history.push('/TheButton');\n       }\n   }\n\nlogin(){\n \nlet name = this.textInput.current.value;\nlet password = this.passInput.current.value;\nlet props = this.props;\nthis.setState({ loading: true })\nsetTimeout(\n  function() {\n      this.setState({loading: false});\n  }\n  .bind(this),\n  1000\n);\n\n\nfetch('http://localhost:8080/api/users/signin', {\n  method: 'post',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(\n    { name: name, password: password,\n   })\n }).then(function(response) {\n  setTimeout(\n    function() {\n      if(response.status !== 200){\n       alert('Sorry, an error occured, try again later');\n       }\n    }\n    .bind(this),\n    1500\n);\n  return response.json();\n}).then(function(data) {\n  localStorage.setItem(\"token\", data.token);  \n  localStorage.setItem(\"name\", name);\n    if(data.token !== undefined){\n    props.history.push('/TheButton');\n    }\n });\n}\n\n  setToken = idToken => {\n    localStorage.setItem(\"token\", idToken);\n  };\n\n  getToken = () => {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"token\");\n  };\n\n  getConfirm = () => {\n    // Using jwt-decode npm package to decode the token\n    if(this.getToken() !== 'undefined') {\n    let answer = jwtDecode(this.getToken());\n    return answer;\n    }\n    else{\n      console.log('no token found')\n    }\n  };\n goToLogin(){\n     this.props.history.push('/Login');\n  }\n\n   goToSignup(){\n    this.props.history.push('/Signup');\n  }\n  render() {\n     return (\n      <div className=\"App\">\n        <ThemeProvider theme={createTheme()}>\n          <Row>\n\n            <Col s={6} m={8} l={6} offset={[\"m2\", \"l3\"]}>\n              <Arwes animate show>\n                {anim => (\n                    <React.Fragment>\n                       {this.state.loading === false ? (\n                      <div style={{ padding: 20 }}>\n                        <h1>Citizen</h1>\n                        <p>You are not in danger</p>\n                        <p><Button onClick={() => this.goToLogin()}>Login</Button> or <Button onClick={() => this.goToSignup()}>Signup</Button></p> \n                       \n                      <div class=\"container\" style={{ paddingTop: 60 }}>\n                          <div class=\"row\">\n                          <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                          </div>\n                            <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                               <Form>\n                                <Form.Group controlId=\"formBasicUser\">\n                                  <Form.Label>Username</Form.Label>\n                                  <Form.Control ref={this.textInput} type=\"text\" type=\"text\" placeholder=\"Enter user\" />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicPassword\" style={{ paddingTop: 20 }}>\n                                  <Form.Label>Password</Form.Label>\n                                  <Form.Control ref={this.passInput} type=\"text\" type=\"password\" placeholder=\"Password\" />\n                                </Form.Group>\n                              </Form>\n                              <Button variant=\"primary\" type=\"submit\" onClick={() => this.login()}>\n                                  Submit\n                                </Button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                       ):\n                       <div class=\"container\" style={{ paddingTop: 190 }}>\n                       <div class=\"row\">\n                       <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                       </div>\n                         <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                         <Loader\n                           type=\"Puff\"\n                           color=\"#00BFFF\"\n                           height={100}\n                           width={100}\n                           timeout={3000} //3 secs\n                         />\n                      </div>\n                    </div>\n                  </div>\n                  }  \n                  </React.Fragment>\n                )}\n              </Arwes>\n            </Col>\n            \n          </Row>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { ThemeProvider, createTheme, Row, Arwes, Col, Button } from \"arwes\";\nimport { Form } from 'react-bootstrap';\nimport * as jwtDecode from 'jwt-decode';\nimport { geolocated } from \"react-geolocated\";\n\nimport Loader from 'react-loader-spinner'\n\nclass TheButton extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef(); \n    this.passInput = React.createRef(); \n    this.state = {loading: false};\n  }\n\ncomponentDidMount(){\n let auth = localStorage.getItem(\"token\");\n  if(!auth){\n    this.props.history.push('/');\n    }\n}\n\npostLocation(lon,lat){\n\n    let latitude =  lat.toString();\n    let longitude = lon.toString();\n    let text = this.textInput.current.value;\n    let name = localStorage.getItem(\"name\");\n    this.setState({ loading: true })\n    setTimeout(\n      function() {\n          this.setState({loading: false});\n      }\n      .bind(this),\n      1000\n  );\n\n    fetch('http://localhost:8080/api/send/location', {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'x-access-token': localStorage.getItem(\"token\"),\n    },\n    body: JSON.stringify(\n     { latitude:latitude, longitude:longitude, name:name, text:text\n    })\n  }).then(function(response) {\n    setTimeout(\n      function() {\n        if(response.status !== 200){\n         alert('Sorry, an error occured, try again later');\n         }\n      }\n      .bind(this),\n      1500\n  );\n      return response.json();\n  })\n}\n\n  render() {\n     return (\n      !this.props.isGeolocationAvailable ? (\n        <div>Your browser does not support Geolocation</div>\n    ) : !this.props.isGeolocationEnabled ? (\n        <div>Geolocation is not enabled</div>\n    ) : this.props.coords ? (\n      <div className=\"App\">\n        <ThemeProvider theme={createTheme()}>\n          <Row>\n\n            <Col s={6} m={8} l={6} offset={[\"m2\", \"l3\"]}>\n              <Arwes animate show>\n                {anim => (\n                    <React.Fragment>\n                      {this.state.loading === false ? (\n                      <div style={{ padding: 20 }}>\n                        <h1>Citizen</h1>\n                        <p>You are not in danger</p>\n                        <p>Make the incident public</p>\n                       \n                      <div class=\"container\" style={{ paddingTop: 60 }}>\n                          <div class=\"row\">\n                          <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                          </div>\n                            <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                               <Form>\n                                <Form.Group controlId=\"formBasicUser\">\n                                  <Form.Label>Write about the incident</Form.Label>\n                                  <Form.Control ref={this.textInput} type=\"text\" type=\"text\" placeholder=\"i think that I am in danger...\"  maxlength=\"255\"/>\n                                </Form.Group>\n                              </Form>\n                              <Button variant=\"primary\" type=\"submit\" onClick={() => this.postLocation(this.props.coords.longitude,this.props.coords.latitude)}>\n                                  Send Location\n                                </Button>\n                               \n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                      ):  \n                      <div class=\"container\" style={{ paddingTop: 190 }}>\n                      <div class=\"row\">\n                      <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                      </div>\n                        <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                        <Loader\n                          type=\"Puff\"\n                          color=\"#00BFFF\"\n                          height={100}\n                          width={100}\n                          timeout={3000} //3 secs\n                        />\n                     </div>\n                        </div>\n                      </div>\n                    }\n                  </React.Fragment>\n                )}\n              </Arwes>\n            </Col>        \n          </Row>\n        </ThemeProvider>\n      </div>\n    ):null\n    );\n  }\n}\nexport default geolocated({\n  positionOptions: {\n      enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(TheButton);","import React from \"react\";\nimport \"./App.css\";\nimport { ThemeProvider, createTheme, Row, Arwes, Col, Button } from \"arwes\";\nimport { Form } from 'react-bootstrap';\nimport * as jwtDecode from 'jwt-decode';\nimport { createBrowserHistory } from 'history'\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\n\nexport default class MainPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount(){\n    let auth = localStorage.getItem(\"token\");\n     if(auth){\n       this.props.history.push('/TheButton');\n       }\n   }\n    goToLogin(){\n     this.props.history.push('/Login');\n    }\n\n    goToSignup(){\n     this.props.history.push('/Signup');\n    }\n\n  render() {\n     return (\n      <div className=\"App\">\n        <ThemeProvider theme={createTheme()}>\n          <Row>\n\n            <Col s={6} m={8} l={6} offset={[\"m2\", \"l3\"]}>\n              <Arwes animate show>\n                {anim => (\n                    <React.Fragment>\n                      <div style={{ padding: 20 }}>\n                        <h1>Citizen</h1>\n                        <p>You are not in danger</p>   \n                    </div>\n                         <div style={{ paddingTop: 80 }}>\n                        <Button onClick={() => this.goToSignup()}>Signup</Button> or <Button onClick={() => this.goToLogin()} style={{ cursor: \"pointer\"}}>Login</Button>\n                         </div>\n                  </React.Fragment>\n                )}\n              </Arwes>\n            </Col>\n            \n          </Row>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Login from './Login';\nimport TheButton from './TheButton';\nimport MainPage from './MainPage';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <div>\n    <Route path='/' component={MainPage}>\n    </Route>\n    <Route path='/TheButton' component={TheButton}> \n    </Route>\n    <Route path='/Login' component={Login}>\n    </Route>\n    <Route path='/Signup' component={App}>\n    </Route>\n    <Route path='/MainPage' component={MainPage}>\n    </Route>\n\n    </div>\n  </BrowserRouter>,\n    document.getElementById('root')\n  );\nserviceWorker.unregister();\n\n"],"sourceRoot":""}