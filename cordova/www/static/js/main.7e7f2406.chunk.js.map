{"version":3,"sources":["App.js","Login.js","MyNavbar.js","TheButton.js","GetLocation.js","Map.js","MainPage.js","serviceWorker.js","index.js"],"names":["App","props","setToken","idToken","localStorage","setItem","getToken","getItem","getConfirm","jwtDecode","console","log","textInput","React","createRef","passInput","emailInput","state","loading","name","this","current","value","email","password","setState","setTimeout","bind","fetch","method","headers","body","JSON","stringify","then","response","status","alert","json","data","token","history","push","className","theme","createTheme","s","m","l","offset","animate","show","anim","Fragment","style","padding","onClick","goToSignup","goToLogin","class","paddingTop","Form","Group","controlId","Label","Control","ref","type","Text","variant","signup","href","color","height","width","timeout","Component","withRouter","Login","undefined","login","MyNavbar","fetchToggle","removeItem","Navbar","bg","expand","Brand","goHome","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","goMap","goMyplaces","Divider","Logout","TheButton","user","auth","lon","lat","latitude","toString","longitude","text","isGeolocationAvailable","isGeolocationEnabled","coords","postLocation","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","GetLocation","locations","res","result","error","center","zoom","maxZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","easeLinearity","TileLayer","url","map","location","index","Marker","key","position","Popup","Map","MainPage","cursor","goToTheButton","Boolean","window","hostname","match","ReactDOM","render","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e7f2406.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { ThemeProvider, createTheme, Row, Arwes, Col, Button } from \"arwes\";\nimport { Form } from 'react-bootstrap';\nimport * as jwtDecode from 'jwt-decode';\nimport { createBrowserHistory } from 'history'\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\n\nimport Loader from 'react-loader-spinner'\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef(); \n    this.passInput = React.createRef(); \n    this.emailInput = React.createRef(); \n    this.state = {loading: false};\n  }\n\n  componentDidMount(){\n    // let auth = localStorage.getItem(\"token\");\n    //  if(auth){\n    //    this.props.history.push('/TheButton');\n    //    }\n   }\n\nsignup() {\n\n  let name = this.textInput.current.value;\n  let email = this.emailInput.current.value;\n  let password = this.passInput.current.value;\n  let props = this.props;\n\n  this.setState({ loading: true })\n  setTimeout(\n  function() {\n      this.setState({loading: false});\n  }\n  .bind(this),\n  1000\n  );\n\n  fetch('http://localhost:8080/api/users', {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(\n     { name:name, email:email, password:password,\n    })\n  }).then(function(response) {\n    setTimeout(\n      function() {\n        if(response.status !== 200){\n         alert('Sorry, an error occured, try again later');\n         }\n      }\n      .bind(this),\n      1500\n  );\n    return response.json();\n  }).then(function(data) {\n    localStorage.setItem(\"token\", data.token);  \n    localStorage.setItem(\"name\", name);\n    props.history.push('/Login/');\n  });\n}\n\n  goToLogin(){\n     this.props.history.push('/Login');\n  }\n\n   goToSignup(){\n    this.props.history.push('/Signup');\n  }\n\n  setToken = idToken => {\n    localStorage.setItem(\"token\", idToken);\n  };\n\n  getToken = () => {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"token\");\n  };\n\n  getConfirm = () => {\n    // Using jwt-decode npm package to decode the token\n    if(this.getToken() !== 'undefined') {\n    let answer = jwtDecode(this.getToken());\n    return answer;\n    }\n    else{\n      console.log('no token found')\n    }\n  };\n\n  render() {\n     return (\n      <div className=\"App\">\n        <ThemeProvider theme={createTheme()}>\n          <Row>\n\n            <Col s={6} m={8} l={6} offset={[\"m2\", \"l3\"]}>\n              <Arwes animate show>\n                {anim => (\n                    <React.Fragment>\n                       {this.state.loading === false ? (\n                      <div style={{ padding: 20 }}>\n                         <h1>Citizen</h1>\n                        <p>You are not in danger</p>\n                        <p><Button onClick={() => this.goToSignup()}>Signup</Button> or <Button onClick={() => this.goToLogin()}>Login</Button></p> \n                       \n                      <div class=\"container\" style={{ paddingTop: 60 }}>\n                          <div class=\"row\">\n                          <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                          </div>\n                            <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                               <Form>\n                                <Form.Group controlId=\"formBasicUser\">\n                                  <Form.Label>Username</Form.Label>\n                                  <Form.Control ref={this.textInput} type=\"text\" type=\"text\" placeholder=\"Enter user\" />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicEmail\" style={{ paddingTop: 20 }}>\n                                  <Form.Label>Email</Form.Label>\n                                  <Form.Control ref={this.emailInput} type=\"text\" type=\"text\" placeholder=\"Enter email\" />\n                                </Form.Group>\n                                <Form.Text>\n                                  We'll never share your email with anyone else.\n                                </Form.Text>\n\n                                <Form.Group controlId=\"formBasicPassword\" style={{ paddingTop: 20 }}>\n                                  <Form.Label>Password</Form.Label>\n                                  <Form.Control ref={this.passInput} type=\"text\" type=\"password\" placeholder=\"Password\" />\n                                </Form.Group>\n                               \n                              </Form>\n                              <Button variant=\"primary\" type=\"submit\" onClick={() => this.signup()}>\n                                  Submit\n                                </Button>\n                                <div style={{ paddingTop: 40 }}>\n                                  <a className=\"links\" href=\"/\">Go Back</a>\n                                </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                       ):\n                       <div class=\"container\" style={{ paddingTop: 190 }}>\n                       <div class=\"row\">\n                       <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                       </div>\n                         <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                         <Loader\n                           type=\"Puff\"\n                           color=\"#00BFFF\"\n                           height={100}\n                           width={100}\n                           timeout={3000} //3 secs\n                         />\n                      </div>\n                    </div>\n                  </div>\n                       }\n                  </React.Fragment>\n                )}\n              </Arwes>\n            </Col>\n            \n          </Row>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\nexport default withRouter(App)\n","import React from \"react\";\nimport \"./App.css\";\nimport { ThemeProvider, createTheme, Row, Arwes, Col, Button } from \"arwes\";\nimport { Form } from 'react-bootstrap';\nimport * as jwtDecode from 'jwt-decode';\n\nimport Loader from 'react-loader-spinner';\n\nexport default class Login extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef(); \n    this.passInput = React.createRef(); \n    this.state = {loading: false};\n  }\n\n  componentDidMount(){\n    let auth = localStorage.getItem(\"token\");\n     if(auth){\n       this.props.history.push('/TheButton');\n       }\n   }\n\nlogin(){\n \nlet name = this.textInput.current.value;\nlet password = this.passInput.current.value;\nlet props = this.props;\nthis.setState({ loading: true })\nsetTimeout(\n  function() {\n      this.setState({loading: false});\n  }\n  .bind(this),\n  1000\n);\n\n\nfetch('http://localhost:8080/api/users/signin', {\n  method: 'post',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(\n    { name: name, password: password,\n   })\n }).then(function(response) {\n  setTimeout(\n    function() {\n      if(response.status !== 200){\n       alert('Sorry, an error occured, try again later');\n       }\n    }\n    .bind(this),\n    1500\n);\n  return response.json();\n}).then(function(data) {\n  localStorage.setItem(\"token\", data.token);  \n  localStorage.setItem(\"name\", name);\n    if(data.token !== undefined){\n    props.history.push('/TheButton');\n    }\n });\n}\n\n  setToken = idToken => {\n    localStorage.setItem(\"token\", idToken);\n  };\n\n  getToken = () => {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"token\");\n  };\n\n  getConfirm = () => {\n    // Using jwt-decode npm package to decode the token\n    if(this.getToken() !== 'undefined') {\n    let answer = jwtDecode(this.getToken());\n    return answer;\n    }\n    else{\n      console.log('no token found')\n    }\n  };\n goToLogin(){\n     this.props.history.push('/Login');\n  }\n\n   goToSignup(){\n    this.props.history.push('/Signup');\n  }\n  render() {\n     return (\n      <div className=\"App\">\n        <ThemeProvider theme={createTheme()}>\n          <Row>\n\n            <Col s={6} m={8} l={6} offset={[\"m2\", \"l3\"]}>\n              <Arwes animate show>\n                {anim => (\n                    <React.Fragment>\n                       {this.state.loading === false ? (\n                      <div style={{ padding: 20 }}>\n                       <h1>Citizen</h1>\n                        <p>You are not in danger</p>\n                        <p><Button onClick={() => this.goToLogin()}>Login</Button> or <Button onClick={() => this.goToSignup()}>Signup</Button></p> \n                       \n                      <div class=\"container\" style={{ paddingTop: 60 }}>\n                          <div class=\"row\">\n                          <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                          </div>\n                            <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                               <Form>\n                                <Form.Group controlId=\"formBasicUser\">\n                                  <Form.Label>Username</Form.Label>\n                                  <Form.Control ref={this.textInput} type=\"text\" type=\"text\" placeholder=\"Enter user\" />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicPassword\" style={{ paddingTop: 20 }}>\n                                  <Form.Label>Password</Form.Label>\n                                  <Form.Control ref={this.passInput} type=\"text\" type=\"password\" placeholder=\"Password\" />\n                                </Form.Group>\n                              </Form>\n                              <Button variant=\"primary\" type=\"submit\" onClick={() => this.login()}>\n                                  Submit\n                                </Button>\n                                <div style={{ paddingTop: 40 }}>\n                                  <a className=\"links\" href=\"/\">Go Back</a>\n                                </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                       ):\n                       <div class=\"container\" style={{ paddingTop: 190 }}>\n                       <div class=\"row\">\n                       <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                       </div>\n                         <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                         <Loader\n                           type=\"Puff\"\n                           color=\"#00BFFF\"\n                           height={100}\n                           width={100}\n                           timeout={3000} //3 secs\n                         />\n                      </div>\n                    </div>\n                  </div>\n                  }  \n                  </React.Fragment>\n                )}\n              </Arwes>\n            </Col>\n            \n          </Row>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport * as jwtDecode from 'jwt-decode';\nimport { createBrowserHistory } from 'history'\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport { Navbar, Nav, NavDropdown, FormControl, Form} from 'react-bootstrap';\n\nexport default class MyNavbar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading:false\n    };\n  }\n     \n    Logout(){\n      this.props.fetchToggle()\n          setTimeout(\n            function() {\n              localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"name\");\n\n                this.props.history.push('/');\n            }\n            .bind(this),\n            1000\n        );   \n      }\n\n      goHome(){\n         this.props.history.push('/TheButton');       \n      }\n\n      goMap(){\n        this.props.history.push('/Map');      \n     }\n\n      goMyplaces(){\n        this.props.history.push('/GetLocation');        \n    }\n    \n  render() {\n          return (\n                    <Navbar  bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                        <Navbar.Brand onClick={() => this.goHome()}>Citizen</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                          <Nav className=\"mr-auto\">\n                            <Nav.Link onClick={() => this.goHome()}>Home</Nav.Link>\n                            <NavDropdown title=\"Activity\" id=\"basic-nav-dropdown\">\n                              <NavDropdown.Item onClick={() => this.goMap()}>Alerts/Map</NavDropdown.Item>\n                              <NavDropdown.Item onClick={() => this.goMyplaces()}>My History</NavDropdown.Item>\n                              <NavDropdown.Divider />\n                              <NavDropdown.Item onClick={() => this.Logout()}>Logout</NavDropdown.Item>\n                            </NavDropdown>\n                          </Nav>\n                        </Navbar.Collapse>\n                      </Navbar>\n                       \n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { ThemeProvider, createTheme, Row, Arwes, Col, Button } from \"arwes\";\nimport { Form, Navbar, Nav, NavDropdown, FormControl} from 'react-bootstrap';\nimport * as jwtDecode from 'jwt-decode';\nimport { geolocated } from \"react-geolocated\";\nimport Loader from 'react-loader-spinner'\nimport MyNavbar from './MyNavbar';\nimport { createBrowserHistory } from 'history'\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\n\nclass TheButton extends React.Component {\n\n  constructor(props) {\n    super(props);\n    console.log('button',props)\n    this.textInput = React.createRef(); \n    this.passInput = React.createRef(); \n    this.state = {loading: false};\n    this.user = localStorage.getItem(\"name\");\n    this.state= {\n      loading:false\n    }\n    this.fetchToggle = this.fetchToggle.bind(this)\n  }\n\n  // componentDidUpdate(prevprops,prevstate){\n  //   if(prevstate.loading === this.state.loading){\n  //      console.log('asd');\n  //   }\n  // }\n\n  fetchToggle(){\n    this.setState({ loading: true })\n    setTimeout(\n      function() {\n        this.setState({ loading: false })\n      }\n      .bind(this),\n      1000\n   );\n  }\n\ncomponentDidMount(){\n  let auth = localStorage.getItem(\"token\");\n  this.setState({ loading: true })\n  setTimeout(\n    function() {\n      this.setState({ loading: false })\n      if(!auth){\n        this.props.history.push('/');\n        alert('You have to register/login first')\n      }\n    }\n    .bind(this),\n    1500\n );\n}\n\nLogout(){\n  this.setState({ loading: true })\n    setTimeout(\n      function() {\n          this.setState({loading: false});\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"name\");\n          this.props.history.push('/');\n      }\n      .bind(this),\n      1000\n  );   \n}\n\npostLocation(lon,lat){\n\n    let latitude =  lat.toString();\n    let longitude = lon.toString();\n    let text = this.textInput.current.value;\n    let name = localStorage.getItem(\"name\");\n    this.setState({ loading: true })\n    setTimeout(\n      function() {\n          this.setState({loading: false});\n      }\n      .bind(this),\n      1000\n  );\n\n    fetch('http://localhost:8080/api/send/location', {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'x-access-token': localStorage.getItem(\"token\"),\n    },\n    body: JSON.stringify(\n     { latitude:latitude, longitude:longitude, name:name, text:text\n    })\n  }).then(function(response) {\n    setTimeout(\n      function() {\n        if(response.status !== 200){\n         alert('Sorry, an error occured, try again later');\n         }\n      }\n      .bind(this),\n      1500\n  );\n      return response.json();\n  })\n}\n\n  render() {\n     return (\n      !this.props.isGeolocationAvailable ? (\n        <div>Your browser does not support Geolocation</div>\n    ) : !this.props.isGeolocationEnabled ? (\n        <div>Geolocation is not enabled</div>\n    ) : this.props.coords ? (\n      <div className=\"App\">\n        <ThemeProvider theme={createTheme()}>\n          <Row>\n\n            <Col s={6} m={8} l={6} offset={[\"m2\", \"l3\"]}>\n              <Arwes animate show>\n                {anim => (\n                    <React.Fragment>\n                      {this.state.loading === false ? (\n                      <div style={{ padding: 20 }}>\n                      <MyNavbar {...this.props} fetchToggle={this.fetchToggle} />\n                      <div style={{ paddingTop: 20 }}>\n                        <h1>Welcome {this.user}</h1>\n                        <p>You are not in danger</p>\n                        <p>Make the incident public</p>\n                       \n                      <div class=\"container\" style={{ paddingTop: 60 }}>\n                          <div class=\"row\">\n                      \n                          <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                          </div>\n                            <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                               <Form>\n                                <Form.Group controlId=\"formBasicUser\">\n                                  <Form.Label>Write about the incident</Form.Label>\n                                  <Form.Control ref={this.textInput} type=\"text\" type=\"text\" placeholder=\"i think that I am in danger...\"  maxlength=\"255\"/>\n                                </Form.Group>\n                              </Form>\n                              <Button variant=\"primary\" type=\"submit\" onClick={() => this.postLocation(this.props.coords.longitude,this.props.coords.latitude)}>\n                                  Send Location\n                                </Button>\n                                <div style={{ paddingTop: 40 }}>\n                                  <a className=\"links\" onClick={() => this.Logout()}>Logout</a>\n                                </div>\n                          </div>\n                        </div>\n                      </div>\n                      </div>\n                    </div>\n                      ):  \n                      <div class=\"container\" style={{ paddingTop: 190 }}>\n                      <div class=\"row\">\n                      <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                      </div>\n                        <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                        <Loader\n                          type=\"Puff\"\n                          color=\"#00BFFF\"\n                          height={100}\n                          width={100}\n                          timeout={3000} //3 secs\n                        />\n                     </div>\n                        </div>\n                      </div>\n                    }\n                  </React.Fragment>\n                )}\n              </Arwes>\n            </Col>        \n          </Row>\n        </ThemeProvider>\n      </div>\n    ):null\n    );\n  }\n}\nexport default geolocated({\n  positionOptions: {\n      enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(TheButton);","import React from \"react\";\nimport \"./App.css\";\nimport { ThemeProvider, createTheme, Row, Arwes, Col, Button } from \"arwes\";\nimport { Form } from 'react-bootstrap';\nimport * as jwtDecode from 'jwt-decode';\nimport { createBrowserHistory } from 'history'\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport { Navbar, Nav, NavDropdown, FormControl} from 'react-bootstrap';\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport MyNavbar from './MyNavbar';\n\nexport default class GetLocation extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n     locations: [],\n     loading: false\n    }\n    this.fetchToggle = this.fetchToggle.bind(this);\n    this.user = localStorage.getItem(\"name\");\n  }\n\n  fetchToggle(){\n    this.setState({ loading: true })\n    setTimeout(\n      function() {\n        this.setState({ loading: false })\n      }\n      .bind(this),\n      1000\n   );\n  }\n \n  componentDidMount(){\n    this.setState({ loading: true })\n\n    setTimeout(\n        function() {\n          this.setState({ loading: false });\n        }\n        .bind(this),\n        1500\n     );\n    fetch(\"http://localhost:8080/api/send/myLocations/\"+localStorage.getItem(\"name\"),{\n    \n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'x-access-token': localStorage.getItem(\"token\"),\n    }\n  })\n     .then(res => res.json())\n     .then(\n       (result) => {\n        this.setState({ locations: result });      \n      },\n       (error) => {\n         console.log(error);\n       }\n     )\n  }\n\n    goToLogin(){\n     this.props.history.push('/Login');\n    }\n\n    goToSignup(){\n     this.props.history.push('/Signup');\n    }\n\n    goToTheButton(){\n      this.props.history.push('/TheButton');\n     }\n     \n    Logout(){\n        this.setState({ loading: true })\n          setTimeout(\n            function() {\n                this.setState({loading: false});\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"name\");\n\n                this.props.history.push('/');\n            }\n            .bind(this),\n            1000\n        );   \n      }\n\n      goHome(){\n        this.setState({ loading: true })\n          setTimeout(\n            function() {\n                this.setState({loading: false});\n                this.props.history.push('/TheButton');\n      \n            }\n            .bind(this),\n            1000\n        );   \n        }\n    \n  render() {\n    const { locations } = this.state;\n\n     return (\n      <div className=\"App\">\n        <ThemeProvider theme={createTheme()} className=\" ar\">\n          <Row>\n\n            <Col s={6} m={8} l={6} offset={[\"m2\", \"l3\"]}>\n              <Arwes animate show>\n                {anim => (\n                    <React.Fragment >\n                  {this.state.loading === false ? (\n                    <div >\n                      <div style={{ padding: 20 }}>\n                      <MyNavbar {...this.props} fetchToggle={this.fetchToggle} />\n                        <h1>{this.user} Places</h1>\n                        <p>You are not in danger </p>                    \n                    </div>\n                        \n                         <Col s={12} m={6} l={6} offset={['l3']}>\n                        <LeafletMap\n                          center={[38, 23.8]}\n                          zoom={11}\n                          maxZoom={20}\n                          attributionControl={true}\n                          zoomControl={true}\n                          doubleClickZoom={true}\n                          scrollWheelZoom={true}\n                          dragging={true}\n                          animate={true}\n                          easeLinearity={0.35}\n                        >\n                          <TileLayer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n                         {locations.map((location, index) => (\n                          <Marker key={index} position={[location.latitude,location.longitude]}>\n                            <Popup>{location.text}</Popup>\n                          </Marker>\n                          ))}\n                        </LeafletMap>\n                      </Col>                        \n            </div>\n             ):  \n             <div class=\"container\" style={{ paddingTop: 190 }}>\n             <div class=\"row\">\n             <div class=\"col-lg-4 col-md-4 col-xs-12\">\n             </div>\n               <div class=\"col-lg-4 col-md-4 col-xs-12\">\n               <Loader\n                 type=\"Puff\"\n                 color=\"#00BFFF\"\n                 height={100}\n                 width={100}\n                 timeout={3000} //3 secs\n               />\n            </div>\n               </div>\n             </div>\n           }\n                  </React.Fragment>\n                )}\n              </Arwes>\n            </Col>\n            \n          </Row>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { ThemeProvider, createTheme, Row, Arwes, Col, Button } from \"arwes\";\nimport { Form } from 'react-bootstrap';\nimport * as jwtDecode from 'jwt-decode';\nimport { createBrowserHistory } from 'history'\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport { Navbar, Nav, NavDropdown, FormControl} from 'react-bootstrap';\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport MyNavbar from './MyNavbar';\n\nexport default class Map extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n     locations: [],\n     loading:false\n    }\n    this.fetchToggle = this.fetchToggle.bind(this)\n\n  }\n\n  fetchToggle(){\n    this.setState({ loading: true })\n    setTimeout(\n      function() {\n        this.setState({ loading: false })\n      }\n      .bind(this),\n      1000\n   );\n  }\n\n  componentDidMount(){\n    this.setState({ loading: true })\n\n    setTimeout(\n        function() {\n          this.setState({ loading: false });\n        }\n        .bind(this),\n        1500\n     );\n    fetch(\"http://localhost:8080/api/send/danger\")\n     .then(res => res.json())\n     .then(\n       (result) => {\n         this.setState({ locations: result });      \n       },\n       (error) => {\n         console.log(error);\n       }\n     )\n }\n    goToLogin(){\n     this.props.history.push('/Login');\n    }\n\n    goToSignup(){\n     this.props.history.push('/Signup');\n    }\n\n    goToTheButton(){\n      this.props.history.push('/TheButton');\n     }\n     \n    Logout(){\n        this.setState({ loading: true })\n          setTimeout(\n            function() {\n                this.setState({loading: false});\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"name\");\n\n                 this.props.history.push('/');\n            }\n            .bind(this),\n            1000\n        );   \n      }\n    \n  render() {\n    const { locations } = this.state;\n\n     return (\n      <div className=\"App\">\n        <ThemeProvider theme={createTheme()} className=\" ar\">\n          <Row>\n\n            <Col s={6} m={8} l={6} offset={[\"m2\", \"l3\"]}>\n              <Arwes animate show>\n                {anim => (\n                    <React.Fragment >\n                 {this.state.loading === false ? (\n                    <div >\n                      <div style={{ padding: 20 }}>\n                      <MyNavbar {...this.props}/>\n                        <h1>Danger Places</h1>\n                        <p>You are not in danger </p>  \n                        {/* <Loader\n                          type=\"Puff\"\n                          color=\"red\"\n                          height={100}\n                          width={100}\n                        />  */}\n                    </div>\n                        \n                         <Col s={12} m={6} l={6} offset={['l3']}>\n                        <LeafletMap\n                          center={[38, 23.8]}\n                          zoom={11}\n                          maxZoom={20}\n                          attributionControl={true}\n                          zoomControl={true}\n                          doubleClickZoom={true}\n                          scrollWheelZoom={true}\n                          dragging={true}\n                          animate={true}\n                          easeLinearity={0.35}\n                        >\n                          <TileLayer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n                         {locations.map((location, index) => (\n                          <Marker key={index} position={[location.latitude,location.longitude]}>\n                            <Popup>{location.text}</Popup>\n                          </Marker>\n                          ))}\n                        </LeafletMap>\n                      </Col>                       \n                  </div>\n                  ):  \n                      <div class=\"container\" style={{ paddingTop: 190 }}>\n                      <div class=\"row\">\n                      <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                      </div>\n                        <div class=\"col-lg-4 col-md-4 col-xs-12\">\n                        <Loader\n                          type=\"Puff\"\n                          color=\"#00BFFF\"\n                          height={100}\n                          width={100}\n                          timeout={3000} //3 secs\n                        />\n                     </div>\n                        </div>\n                      </div>\n                    }\n                  </React.Fragment>\n                )}\n              </Arwes>\n            </Col>\n            \n          </Row>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { ThemeProvider, createTheme, Row, Arwes, Col, Button } from \"arwes\";\nimport { Form } from 'react-bootstrap';\nimport * as jwtDecode from 'jwt-decode';\nimport { createBrowserHistory } from 'history'\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\n\nexport default class MainPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount(){\n    // let auth = localStorage.getItem(\"token\");\n    //  if(auth){\n    //    this.props.history.push('/TheButton');\n    //    }\n   }\n    goToLogin(){\n     this.props.history.push('/Login');\n    }\n\n    goToSignup(){\n     this.props.history.push('/Signup');\n    }\n\n    goToTheButton(){\n      this.props.history.push('/TheButton');\n     }\n\n  render() {\n     return (\n      <div className=\"App\">\n        <ThemeProvider theme={createTheme()} className=\" ar\">\n          <Row>\n\n            <Col s={6} m={8} l={6} offset={[\"m2\", \"l3\"]}>\n              <Arwes animate show>\n                {anim => (\n                    <React.Fragment >\n                    <div >\n                      <div style={{ padding: 20 }}>\n                        <h1>Citizen</h1>\n                        <p>You are not in danger </p>                  \n                    </div>\n                         <div style={{ paddingTop: 80 }}>\n                        <Button onClick={() => this.goToSignup()}>Signup</Button> or <Button onClick={() => this.goToLogin()} style={{ cursor: \"pointer\"}}>Login</Button>\n                         </div>\n                         <div style={{ paddingTop: 120 }}>\n                        <h1>Press the alert button </h1>\n                      </div>\n                         <div style={{ paddingTop: 80 }}>\n                        <Button style={{ width: 300 }} onClick={() => this.goToTheButton()}>Alert</Button>\n                         </div>\n                         </div>\n                  </React.Fragment>\n                )}\n              </Arwes>\n            </Col>\n            \n          </Row>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Login from './Login';\nimport TheButton from './TheButton';\nimport GetLocation from './GetLocation';\nimport Map from './Map';\nimport MainPage from './MainPage';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\nimport MyNavbar from './MyNavbar';\n\n\n// if (navigator) {\n//   // Not adding `{ audio: true }` since we only want video now\n//   navigator.notification.beep(3);\n\n// }\n\nReactDOM.render(\n    <BrowserRouter>\n    <div>\n    <Route path='/' component={MainPage}>\n    </Route>\n    <Route path='/TheButton' component={TheButton}> \n    </Route>\n    <Route path='/GetLocation' component={GetLocation}> \n    </Route>\n    <Route path='/Map' component={Map}> \n    </Route>\n    <Route path='/Login' component={Login}>\n    </Route>\n    <Route path='/Signup' component={App}>\n    </Route>\n    <Route path='/MainPage' component={MainPage}>\n    </Route>\n\n    </div>\n  </BrowserRouter>,\n    document.getElementById('root')\n  );\nserviceWorker.unregister();\n\n"],"sourceRoot":""}